// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TTHandiCrafts.Infrastructure.Persistences;

namespace TTHandiCrafts.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("TTHandiCrafts.Models.Models.BinaryData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("FileName")
                        .HasColumnType("text");

                    b.Property<byte[]>("Image")
                        .HasColumnType("bytea");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("BinaryData");
                });

            modelBuilder.Entity("TTHandiCrafts.Models.Models.Products.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CategoryType")
                        .HasColumnType("integer");

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<bool>("IsFavorites")
                        .HasColumnType("boolean");

                    b.Property<int?>("MemberId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("ProductType")
                        .HasColumnType("integer");

                    b.Property<bool>("ToMake")
                        .HasColumnType("boolean");

                    b.Property<int?>("UserWorkId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.HasIndex("UserWorkId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("TTHandiCrafts.Models.Models.UserModels.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<byte[]>("Image")
                        .HasColumnType("bytea");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.Property<int>("UserType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");
                });

            modelBuilder.Entity("TTHandiCrafts.Models.Models.UserModels.UserWork", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<double>("Evaluation")
                        .HasColumnType("double precision");

                    b.Property<int?>("MemberId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.ToTable("UserWork");
                });

            modelBuilder.Entity("TTHandiCrafts.Models.Models.UserModels.Member", b =>
                {
                    b.HasBaseType("TTHandiCrafts.Models.Models.UserModels.User");

                    b.HasDiscriminator().HasValue("Member");
                });

            modelBuilder.Entity("TTHandiCrafts.Models.Models.BinaryData", b =>
                {
                    b.HasOne("TTHandiCrafts.Models.Models.Products.Product", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("TTHandiCrafts.Models.Models.Products.Product", b =>
                {
                    b.HasOne("TTHandiCrafts.Models.Models.UserModels.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId");

                    b.HasOne("TTHandiCrafts.Models.Models.UserModels.UserWork", null)
                        .WithMany("Products")
                        .HasForeignKey("UserWorkId");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("TTHandiCrafts.Models.Models.UserModels.UserWork", b =>
                {
                    b.HasOne("TTHandiCrafts.Models.Models.UserModels.Member", null)
                        .WithMany("UserWorks")
                        .HasForeignKey("MemberId");
                });

            modelBuilder.Entity("TTHandiCrafts.Models.Models.Products.Product", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("TTHandiCrafts.Models.Models.UserModels.UserWork", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("TTHandiCrafts.Models.Models.UserModels.Member", b =>
                {
                    b.Navigation("UserWorks");
                });
#pragma warning restore 612, 618
        }
    }
}
